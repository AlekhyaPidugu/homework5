---
Title: "Homework 5"
Subtitle: "Submission 1"
Author: "Alekhya Pidugu"
format:
  pdf:
    output-file: "pidugu-a-hwk5-1"
    output-ext:  "pdf"
---
# Git Repository: https://github.com/AlekhyaPidugu/Homework5

```{r results="hide", echo=FALSE, message=FALSE}
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, ggplot2, dplyr, lubridate, readr, readxl, hrbrthemes, fixest,
               scales, gganimate, gapminder, gifski, png, tufte, plotly, OECD,
               ggrepel, survey, foreign, devtools, pdftools, kableExtra, modelsummary,
               kableExtra)

```

\newpage
# Question 1
```{r results="hide", echo=FALSE, message=FALSE}
data <- read.table("/Users/alekhyapidugu/Desktop/homework5/data/output/acs_medicaid.txt", header = TRUE, sep = "\t")
data <- data[complete.cases(data$ins_direct), ]

# Group by year and calculate the average share of adult population with direct purchase health insurance
insurance_share <- data %>%
  group_by(year) %>%
  summarize(avg_ins_direct = mean(ins_direct))

# Plotting
ggplot(insurance_share, aes(x = year, y = avg_ins_direct)) +
  geom_line() +
  geom_point() +
  labs(x = "Year", y = "Share of Adult Population with Direct Purchase Health Insurance", title = "Share of Adult Population with Direct Purchase Health Insurance Over Time")

```

\newpage
# Question 2
 <br>  
The expansion of Medicaid eligibility under the ACA provided coverage to millions of low-income individuals who might have otherwise purchased insurance directly from the market. This could have reduced the pool of potential customers for direct purchase insurance plans.<br>  
 <br>  
The ACA prohibits insurance companies from denying coverage or charging higher premiums based on pre-existing conditions. This provision made it easier for individuals with pre-existing conditions to obtain coverage through ACA-compliant plans offered in the marketplaces, potentially reducing the demand for direct purchase plans.<br>  
 <br>  
State-level regulations regarding insurance market practices, such as rate review requirements, benefit mandates, and network adequacy standards, can influence the availability and affordability of direct purchase insurance plans. Regulatory changes that increase the cost of offering or purchasing direct purchase plans could impact their viability in the market.
<br>  

\newpage
# Question 3
```{r results="hide", echo=FALSE, message=FALSE}
any(is.na(data))

data$year <- as.factor(data$year)

# Plot using ggplot
ggplot(data, aes(x = year, y = uninsured, group = State, color = State)) +
  geom_line() +
  labs(title = "Number of Uninsured Population Over Years by State",
       x = "Year",
       y = "Uninsured Population") +
  theme_minimal() +
  theme(legend.position = "none") +
  scale_x_discrete(breaks = unique(data$year))

  ```

\newpage
# Question 4
```{r results="hide", echo=FALSE, message=FALSE}
medicaid_expansion_filtered <- data %>%
  filter(expand_year <= 2014) %>%
  mutate(medicaid_status = ifelse(expand_year <= 2014, "Expanded in 2014 or before", "Did not expand or expanded after 2014"))

# Plot the share of uninsured over time, separately by Medicaid expansion status
ggplot(medicaid_expansion_filtered, aes(x = as.integer(as.character(year)), y = uninsured, color = medicaid_status)) +
  geom_line() +
  labs(title = "Share of Uninsured Over Time",
       x = "Year",
       y = "Number of Uninsured",
       color = "Medicaid Expansion Status") +
  theme_minimal()
  ```

  \newpage
# Question 5
```{r echo=FALSE, message=FALSE}
data_2012_2015 <- data %>%
  filter(year %in% c("2012", "2015"))

# Calculate average percent of uninsured individuals in 2012 and 2015, separately for expansion and non-expansion states
average_uninsured <- data_2012_2015 %>%
  group_by(expand_ever, year) %>%
  summarise(avg_uninsured = mean(uninsured / adult_pop, na.rm = TRUE))

# Pivot the data to create the 2x2 DD table
dd_table <- pivot_wider(average_uninsured, names_from = year, values_from = avg_uninsured)

# Print the DD table
print(dd_table)
```

\newpage
# Question 6
```{r echo=FALSE, message=FALSE}
filtered_data <- data %>%
  filter(year %in% c("2013", "2014", "2015"), expand_year %in% c(2014, NA))

# Create a dummy variable for post-treatment years (2014 and 2015)
filtered_data <- filtered_data %>%
  mutate(post_treatment = ifelse(year == "2014" | year == "2015", 1, 0))

# Create interaction terms between Medicaid expansion and post-treatment years
filtered_data <- filtered_data %>%
  mutate(expansion_post = expand_ever * post_treatment)

# Estimate the DD regression model
dd_model <- lm(uninsured / adult_pop ~ expand_ever + post_treatment + expansion_post, data = filtered_data)

# Summarize the regression results
summary(dd_model)
```

\newpage
# Question 7
```{r  echo=FALSE, message=FALSE}
library(lfe)

# Estimate the DD regression model with state and year fixed effects using lfe
dd_model_lfe <- felm(uninsured / adult_pop ~ expand_ever + post_treatment + expansion_post | State + year, data = filtered_data)

# Summarize the regression results
summary(dd_model_lfe$coef)
```

\newpage
# Question 8
```{r  echo=FALSE, message=FALSE}
did_model <- felm(uninsured ~ expand + factor(State) + factor(year) | factor(State) + factor(year), data = data)

# View the results
summary(did_model)
```

\newpage
# Question 9
```{r  echo=FALSE, message=FALSE}
library(tidyverse)
library(modelsummary)
library(fixest)
reg.dat <- data %>% 
  filter(expand_year==2014 | is.na(expand_year), !is.na(expand_ever)) %>%
  mutate(perc_unins=uninsured/adult_pop,
         post = (year>=2014), 
         treat=post*expand_ever)

mod.twfe <- feols(perc_unins~i(year, expand_ever, ref=2013) ,
                  cluster=~State,
                  data=reg.dat)

number9 <- iplot(mod.twfe, 
      xlab = 'Time to treatment',
      main = 'Event study')
```

\newpage
# Question 10
```{r  echo=FALSE, message=FALSE}
reg.dat <- data %>% 
  filter(!is.na(expand_ever)) %>%
  mutate(perc_unins = uninsured / adult_pop,
         post = year >= 2014,
         expand_year = ifelse(is.na(expand_year), year, expand_year),
         event_time = expand_year - 2014)  # Align all states to event time (2014)

# Run the fixed effects regression with treatment effect
mod.twfe <- feols(perc_unins ~ i(event_time, expand_ever), 
                  cluster = ~State,
                  data = reg.dat)

# Create the event study plot
iplot(mod.twfe, 
      xlab = 'Time to treatment',
      main = 'Event study')
```